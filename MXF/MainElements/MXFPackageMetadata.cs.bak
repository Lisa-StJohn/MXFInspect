using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Myriadbits.MXFInspect
{	
	public class MXFPackageMetaData : MXFKLV
	{
		private static Dictionary<int, string> m_itemTypes = new Dictionary<int, string>();

		/// <summary>
		/// Static constructor to initialize the static array
		/// </summary>
		static MXFPackageMetaData()
		{
			// Add all meta data see spec: SMPTE ST 331:2011
			m_itemTypes.Add(0x80, "Metadata link");
			m_itemTypes.Add(0x81, "SMPTE 12M time-code");
			m_itemTypes.Add(0x82, "SMPTE 309M date-time stamp");
			m_itemTypes.Add(0x83, "UMID");
			m_itemTypes.Add(0x84, "MPEG-2 picture editing");
			m_itemTypes.Add(0x85, "8-channel AES3 editing");
			m_itemTypes.Add(0x86, "Picture bit-stream splicing");
			m_itemTypes.Add(0x87, "MPEG decoder buffer delay");
			m_itemTypes.Add(0x88, "KLV metadata");
			m_itemTypes.Add(0x89, "AES3 non-audio metadata");
		}

		public MXFPackageMetaData(MXFReader reader, MXFKLV headerKLV)
			: base(headerKLV, "PackageMetadata", KeyType.PackageMetaDataSet)
		{
			reader.Seek( this.DataOffset); // Seek to the start of the data

			long end = this.DataOffset + this.Length;
			while (reader.Position < end)
			{
				byte type = reader.ReadB();
				UInt16 size = reader.ReadW();
				long startPos = reader.Position;
				if (m_itemTypes.ContainsKey(type))
				{
					this.AddChild(new MXFData(m_itemTypes[type], reader, size));
				}
				reader.Seek(startPos + size);
			}
		}
		
		public override string ToString()
		{
			return string.Format("Package Metadata [len {0}]", this.Length);
		}
	}
}
